{{ include('components/form/header.html.twig', {params: {target: '/plugins/tender/front/invoice.form.php'}}) }}
{% import 'components/form/fields_macros.html.twig' as fields %}
   <div class="card-body d-flex flex-wrap">
      <div class="col-12 col-xxl-{{ item_has_pictures ? '9' : '12' }} flex-column">
         <div class="d-flex flex-row flex-wrap flex-xl-nowrap">
            <div class="row flex-row align-items-start flex-grow-1">
               <div class="row flex-row">

                     {{ fields.textField(
                        'name',
                        '',
                        __('Invoice Reference', 'tender'),
                     ) }}

                     {{ fields.textField(
                        'internal_reference',
                        '',
                        __('Internal Reference', 'tender'),
                     ) }}

                     {{ fields.dateField(
                           'invoice_date',
                           '',
                           __('Invoice Date', 'tender'),
                           {
                              'required': true
                           }
                     ) }}

                     {{ fields.textField(
                        'posting_text',
                        '',
                        __('Posting Text', 'tender'),
                           {
                              'required': true
                           }
                     ) }}

                     {{ fields.smallTitle( 
                        __('Due Date', 'tender'),
                     )}}

                     {{ fields.dateField(
                           'due_date',
                           '',
                           __('Due Date', 'tender'),
                           {
                              'required': true
                           }
                     ) }}

                     {{ fields.numberField(
                           'due_date_in',
                           0,
                           __('Due Date In', 'tender')
                     ) }}

                     {{ fields.hiddenField(
                           'plugin_tender_tenders_id',
                           tenders_id
                     ) }}
            <div class="table-responsive" {% if showmassiveactions %} id="{{ massiveactionparams['container'] }}" {% endif %}>
               <table class="table table-hover table-input-tender">
                     <thead>
                        <tr>
                           <th>{{__('Name')}}</th>
                           <th>{{__('Ordered Quantity', 'tender')}}</th>
                           <th>{{__('Delivered Quantity', 'tender')}}</th>
                           <th>{{__('Invoiced Quantity', 'tender')}}</th>
                           <th>{{__('Enter Quantity', 'tender')}}</th>
                           <th>{{__('Net Price', 'tender')}}</th>
                           <th>{{__('Net Total Price', 'tender')}}</th>
                           <th>{{__('Tax', 'tender')}}</th>
                           <th>{{__('Tax Total', 'tender')}}</th>
                           <th>{{__('Gross Price', 'tender')}}</th>
                           <th>{{__('Delivery Location', 'tender')}}</th>
                           <th>{{__('Distribution', 'tender')}}</th>
                           <th>{{__('Financial', 'tender')}}</th>
                           <th>{{__('Reference', 'tender')}}</th>
                        </tr>
                     </thead>
                     <tbody>
                        {% for item in tenderitems %}
                           
                        {% if item.invoiced_quantity is null %}
                           {% set invoiced_quantity = 0 %}
                           {% else %}
                           {% set invoiced_quantity = item.invoiced_quantity %}
                        {% endif %}
                        {% if item.delivered_quantity is not null %}
                           {% set delivered_quantity = item.delivered_quantity %}
                           {% set pending_quantity = delivered_quantity - invoiced_quantity %}
                           <tr>
                              <td>
                                 {{ item.tender_item.name }}
                              </td>
                              <td>
                                 {{ item.tender_item.quantity }}
                              </td>
                              <td>
                                 {{ item.delivered_quantity }}
                              </td>
                              <td>
                                 {{ item.invoiced_quantity }}
                              </td>
                              <td class="item_quantity">
                                 {% if pending_quantity > 0 %}
                                    {{ fields.numberField(
                                       'item[' ~ loop.index ~ '][quantity]',
                                       pending_quantity,
                                       '',
                                       {
                                          'no_label': true,
                                          'max': pending_quantity,
                                          'min': 0
                                       }
                                    ) }}
                                 {% else %}
                                 {{ pending_quantity }}
                                 {% endif %}
                              </td>
                              <td class="net_price">
                                 {{ item.tender_item.net_price|number_format(2, ',', '.') }}
                              </td>
                              <td class="net_total">
                                 {{ (item.tender_item.net_price * pending_quantity)|number_format(2, ',', '.') }}
                              </td>
                              <td class="tax">
                                 {{ item.tender_item.tax }}
                              </td>
                              <td class="tax_total">
                                 {% if item.tender_item.tax == 0 %} 
                                    0
                                 {% else %}
                                    {{ (item.tender_item.net_price * pending_quantity * ((item.tax / 100)))|number_format(2, ',', '.') }}
                                 {% endif %}
                              </td>
                              <td class="gross_total">
                              {% if item.tender_item.tax == 0 %} 
                                 {{ item.tender_item.net_price * pending_quantity }}
                              {% else %}
                                 {{ (item.tender_item.net_price * pending_quantity * (1 + (item.tax / 100)))|number_format(2, ',', '.') }}
                              {% endif %}
                              </td>
                              <td>
                                 {{ item.delivery_location_name }}
                              </td>
                              <td>
                                 {{ item.location_name }}
                              </td>
                              <td>
                                 {{ item.financial.name }}
                              </td>
                              <td>
                                 {{ item.financial.reference }}
                              </td>
                                 {% if pending_quantity > 0 %}
                                    {{ fields.hiddenField(
                                          'item[' ~ loop.index ~ '][id]',
                                          item.id
                                    ) }}
                                 {% endif %}
                           </tr>
                        {% endif %}                           
                        {% endfor %}
                     </tbody>
                     <tfoot>
                        <tr>
                           <td colspan="6"></td>
                           <td class="net_total_sum"></td>
                           <td></td>
                           <td class="tax_total_sum"></td>
                           <td class="gross_total_sum"></td>
                           <td colspan="4"></td>
                        </tr>
                     </tfoot>
               </table>
            </div>                     
            </div>
               <div>
                  <input type="hidden" name="_glpi_csrf_token" value="{{ csrf_token() }}" />
                  <button class="btn btn-primary me-2" type="submit" name="add" value="1">
                     <i class="fas fa-plus"></i>
                     <span>{{ _x('button', 'Add') }}</span>
                  </button>
               </div>
         </div>
      </div>
   </div>
   <div class="col-12 col-xxl-{{ item_has_pictures ? '9' : '12' }} flex-column">
      <hr />
      {{ include('@tender/components/table.html.twig') }}
   </div>
</div>
<script>
var tender = JSON.parse('{{ tender|json_encode|raw }}');

$(document).ready(function() {
   sumTotal();

   $(document).on('change', '.item_quantity input', function(e) {
      var net_price = this.closest('.item_quantity').parentElement.querySelector('.net_price');
      var net_total = this.closest('.item_quantity').parentElement.querySelector('.net_total');
      var tax_total = this.closest('.item_quantity').parentElement.querySelector('.tax_total');
      var tax = this.closest('.item_quantity').parentElement.querySelector('.tax');
      var gross_total = this.closest('.item_quantity').parentElement.querySelector('.gross_total');

      var tax = tax.textContent > 0 ? (1 + (parseFloat(tax.textContent) / 100)) : 1;
      //var gross_total = net_total * (1 + (tax / 100));
      net_total.textContent = (parseFloat(net_price.textContent) * parseFloat(this.value)).toFixed(2).replace(".", ",").replace(/(\d)(?=(\d{3})+(?:\,\d+)?$)/g, "$1.");
      gross_total.textContent = (parseFloat(net_price.textContent) * parseFloat(this.value) * parseFloat(tax)).toFixed(2).replace(".", ",").replace(/(\d)(?=(\d{3})+(?:\,\d+)?$)/g, "$1.");
      tax_total.textContent = ((parseFloat(net_price.textContent) * parseFloat(this.value) * parseFloat(tax)) - (parseFloat(net_price.textContent) * parseFloat(this.value))).toFixed(2).replace(".", ",").replace(/(\d)(?=(\d{3})+(?:\,\d+)?$)/g, "$1.")

      sumTotal();

   });

   $(document).on('change', "input[name='name']", function(e) {
      var postingTextSuggest = "";
      if ($("input[name='posting_text']").val().length == 0) {
         postingTextSuggest = 'RG-Nr: ' + $(this).val() + ', ' + tender["tender_subject"] + '/' + tender["name"];
         $("input[name='posting_text']").val(postingTextSuggest);
      }
   });

   $(document).on('change', "input[name='due_date_in']", function(e) {

      if ($("input[name='due_date']").val().length == 0 && $("input[name='invoice_date']").val().length != 0) {
         var dueDate = new Date($("input[name='invoice_date']").val());

         dueDate.setDate(dueDate.getDate() + parseInt($(this).val()));

         var year = dueDate.getFullYear();
         var month = ('0' + (dueDate.getMonth() + 1)).slice(-2);
         var day = ('0' + dueDate.getDate()).slice(-2);
         dueDate = year + '-' + month + '-' + day;

         $("input[name='due_date']").next().val(dueDate);

      }
   });   

   function sumTotal() {
      var netSum = sumColumn('net_total');
      var taxSum = sumColumn('tax_total');
      var grossSum = sumColumn('gross_total');

      // Summen in die entsprechenden Summe-Zellen einfügen
      $('.net_total_sum').text(netSum.toFixed(2).replace(".", ",").replace(/(\d)(?=(\d{3})+(?:\,\d+)?$)/g, "$1."));
      $('.tax_total_sum').text(taxSum.toFixed(2).replace(".", ",").replace(/(\d)(?=(\d{3})+(?:\,\d+)?$)/g, "$1."));
      $('.gross_total_sum').text(grossSum.toFixed(2).replace(".", ",").replace(/(\d)(?=(\d{3})+(?:\,\d+)?$)/g, "$1."));

   }

       function sumColumn(className) {
        var sum = 0;
        $('.' + className).each(function(){
            // Textinhalt des TD-Elements auslesen und in eine Zahl umwandeln
            var val = parseFloat($(this).text().replace(/\./g, '').replace(',', '.'));
            console.log(val)
            if(!isNaN(val)){
                sum += val;
            }
        });
        return sum;
    }

});
</script>